{"version":3,"sources":["Posts.js","App.js","index.js"],"names":["PostApp","componentDidMount","getPosts","createPost","a","axios","post","userId","state","title","body","data","posts","push","setState","console","log","get","response","error","deletePost","postId","delete","filter","id","selectPost","updatePost","put","index","findIndex","getUser","user","alert","username","email","handleChange","target","name","value","handleSubmit","e","preventDefault","onSubmit","this","type","onChange","Table","striped","bordered","hover","map","Button","onClick","variant","Component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7ab9b76e.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Table, Button } from \"react-bootstrap\";\r\n\r\n\r\nclass PostApp extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            posts: [],\r\n            id: \"\",\r\n            userId: \"\",\r\n            title: \"\",\r\n            body: \"\",\r\n\r\n            user: [\r\n\r\n            ]\r\n\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => this.getPosts();\r\n\r\n    // componentDidMount = () => this.getUser();\r\n\r\n    createPost = async () => {\r\n        try {\r\n            const { data } = await axios.post(\"https://jsonplaceholder.typicode.com/posts\",\r\n                {\r\n                    userId: this.state.userId,\r\n                    title: this.state.title,\r\n                    body: this.state.body,\r\n                });\r\n            const posts = [...this.state.posts];\r\n            posts.push(data);\r\n            this.setState({\r\n                posts: posts, userId: \"\",\r\n                title: \"\",\r\n                body: \"\",\r\n            });\r\n\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    getPosts = async () => {\r\n        try {\r\n            const response = await axios.get(\"https://jsonplaceholder.typicode.com/posts\");\r\n            this.setState({ posts: response.data });\r\n        } catch (err) {\r\n            console.error(err);\r\n        }\r\n    }\r\n\r\n    deletePost = async (postId) => {\r\n        try {\r\n            await axios.delete(`https://jsonplaceholder.typicode.com/posts/${postId}`);\r\n            let posts = [...this.state.posts];\r\n            posts = posts.filter((post) => post.id !== postId);\r\n            this.setState({ posts });\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n\r\n    }\r\n    selectPost = (post) => {\r\n        this.setState({\r\n            id: post.id,\r\n            userId: post.userId,\r\n            title: post.title,\r\n            body: post.body,\r\n        })\r\n    }\r\n    updatePost = async () => {\r\n        try {\r\n            const { id, userId, title, body, posts } = this.state;\r\n            const { data } = await axios.put(`https://jsonplaceholder.typicode.com/posts/${id}`, {\r\n                userId,\r\n                title,\r\n                body,\r\n            });\r\n            const index = posts.findIndex((post) => post.id === id);\r\n            posts[index] = data;\r\n\r\n            this.setState({ posts, id: \"\", userId: \"\", title: \"\", body: \"\" });\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    };\r\n\r\n    getUser = async (userId) => {\r\n        const { data } = await axios.get(`https://jsonplaceholder.typicode.com/users/${userId}`);\r\n        console.log(data);\r\n        this.setState({\r\n            user: data\r\n        });\r\n        alert(data.username, data.email, data.body);\r\n    }\r\n\r\n    handleChange = ({ target: { name, value } }) => {\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (this.state.id) {\r\n            this.updatePost();\r\n        } else {\r\n            this.createPost();\r\n        }\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <label>UserId</label>\r\n                    <input type=\"number\" name=\"userId\" value={this.state.userId} onChange={this.handleChange} />\r\n                    <label>Title</label>\r\n                    <input type=\"text\" name=\"title\" value={this.state.title} onChange={this.handleChange} />\r\n                    <label>Body</label>\r\n                    <input type=\"text\" name=\"body\" value={this.state.body} onChange={this.handleChange} />\r\n                    <input type=\"Submit\" />\r\n                </form>\r\n                <Table striped bordered hover >\r\n                    <tr>\r\n                        <th>Id</th>\r\n                        <th>UserId</th>\r\n                        <th>Title</th>\r\n                        <th>Body</th>\r\n                        <th>Action</th>\r\n                    </tr>\r\n                    <tbody>\r\n                        {this.state.posts.map((post) => {\r\n                            return (\r\n                                <tr key={post.id}>\r\n                                    <td>{post.id}</td>\r\n                                    <td>{post.userId}</td>\r\n                                    <td>{post.title}</td>\r\n                                    <td>{post.body}</td>\r\n                                    <td>\r\n                                        <Button onClick={() => this.selectPost(post)}>Edit</Button>\r\n                                        <Button variant=\"danger\" onClick={() => this.deletePost(post.id)}>Delete</Button>\r\n                                        <Button onClick={() => this.getUser(post.userId)}>Get User</Button>\r\n                                     \r\n                                    </td>\r\n                                </tr>\r\n                            );\r\n                        })}\r\n                    </tbody>\r\n                </Table>\r\n\r\n            </>\r\n        );\r\n    }\r\n}\r\nexport default PostApp;","import { BrowserRouter, Route, Switch, Redirect, Link } from \"react-router-dom\";\r\nimport { Table } from \"react-bootstrap\";\r\nimport PostApp from \"./Posts\";\r\n\r\nfunction App() {\r\n    return (\r\n        <>\r\n        <PostApp />\r\n         </>   \r\n    );\r\n}\r\nexport default App;","import REACT from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App.js\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<>\n<App/>\n</>\n,document.getElementById(\"root\"));"],"sourceRoot":""}